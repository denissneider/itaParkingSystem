version: "3.8"

services:
  # usersService DB
  users-db:
    image: postgres
    container_name: users-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # usersService app
  users-service:
    build: ./usersService
    container_name: users-service
    ports:
      - "8000:8000"
    environment:
    - DATABASE_URL=postgresql://user:password@users-db:5432/users_db
    - DD_SERVICE=usersService
    - DD_ENV=dev
    - DD_VERSION=1.0
    - DD_AGENT_HOST=datadog
    - DD_TRACE_ENABLED=true
    - DD_LOGS_INJECTION=true
    depends_on:
      - users-db
      - datadog

  # parkingService DB
  parking-db:
    image: postgres
    container_name: parking-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: parking_db
    ports:
      - "5433:5432"  # 5432 inside container, 5433 outside on your localhost
    volumes:
      - parking_pgdata:/var/lib/postgresql/data

  # parkingService app
  parking-service:
    build:
      context: ./parkingService/parking-service
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: parking-service
    ports:
      - "8080:8080"  # (Quarkus HTTP port, optional)
      - "9000:9000"  # (gRPC port for Quarkus)
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://parking-db:5432/parking_db
      QUARKUS_DATASOURCE_USERNAME: user
      QUARKUS_DATASOURCE_PASSWORD: password
    depends_on:
      - parking-db

  # paymentService DB
  payment-db:
    image: postgres
    container_name: payment-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: payment_db
    ports:
      - "5434:5432"  # 5432 inside container, 5434 outside on your localhost
    volumes:
      - payment_pgdata:/var/lib/postgresql/data

  # RabbitMQ for messaging
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # paymentService app
  payment-service:
    build: ./paymentService
    container_name: payment-service
    depends_on:
      - payment-db
      - rabbitmq
    ports:
      - "3000:3000"
    environment:
      RABBITMQ_URL: amqp://rabbitmq:5672
      DB_HOST: payment-db
      DB_PORT: 5432
      DB_USERNAME: user
      DB_PASSWORD: password
      DB_NAME: payment_db

  datadog:
    image: gcr.io/datadoghq/agent:latest
    container_name: datadog
    environment:
      - DD_API_KEY=${DD_API_KEY}  # poskrbi, da je nastavljen v tvojem .env ali okolju
      - DD_SITE=datadoghq.eu
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_CONTAINER_EXCLUDE="name:datadog"
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    ports:
      - "8126:8126"
    restart: always

volumes:
  pgdata:
  parking_pgdata:
  payment_pgdata: